swagger: '2.0'
info:
  version: '0.0.1'
  title: REST API to demonstrate authentication mechanisms
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https

# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  AccessTokenHeader:
    type: apiKey
    in: header
    name: X-ID-Token
paths:
  /ping:
    x-swagger-router-controller: ping
    get:
      description: Returns 'pong' to the caller
      # used as the method name of the controller
      operationId: ping
      responses:
        '200':
          description: Success
          schema:
            # a pointer to a definition
            $ref: '#/definitions/BasicResponse'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /protected:
    x-swagger-router-controller: protected
    get:
      description: Returns 'success' to the caller
      # used as the method name of the controller
      operationId: protected
      security:
        - AccessTokenHeader: []
      responses:
        '200':
          description: Success
          schema:
            # a pointer to a definition
            $ref: '#/definitions/BasicResponse'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /bikes:
    x-swagger-router-controller: bikes
    get:
      operationId: getBikesForUser
      summary: Gets list of bikes for user
      security:
        - AccessTokenHeader: []
      responses:
        '200':
          description: Success
          schema:
            # a pointer to a definition
            $ref: '#/definitions/BasicResponse'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      description: Adds new bike information after validation
      # used as the method name of the controller
      operationId: create
      security:
        - AccessTokenHeader: []
      parameters:
        - name: bike
          description: Bike Object
          in: body
          schema:
            $ref: '#/definitions/Bike'
      responses:
        '200':
          description: Success
          schema:
            # a pointer to a definition
            $ref: '#/definitions/BasicResponse'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /bikes/{bikeIds}:
    x-swagger-router-controller: bikes
    get:
      operationId: getBikesByIds
      summary: Gets bike details by ids.
      parameters:
        - in: path
          name: bikeIds
          type: string
          required: true
          description: Bike Id.
      responses:
        '200':
          description: Success
          schema:
            # a pointer to a definition
            $ref: '#/definitions/BasicResponse'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'

  /search/{serial}:
    x-swagger-router-controller: bikes
    get:
      operationId: search
      summary: Searches for a bike by serial
      parameters:
        - in: path
          name: serial
          type: string
          required: true
          description: Bike serial number.
      responses:
        '200':
          description: Success
          schema:
            # a pointer to a definition
            $ref: '#/definitions/BasicResponse'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
# complex objects have schema definitions
definitions:
  Bike:
    type: object
    properties:
      serial:
        type: string
      make:
        type: string
      model:
        type: string
    required:
      - serial
      - make
  BasicResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
